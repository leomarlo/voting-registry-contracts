/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MethodsResolver,
  MethodsResolverInterface,
} from "../MethodsResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "methods",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101cb806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632153a1df14610030575b600080fd5b61004a600480360381019061004591906100bb565b610060565b6040516100579190610106565b60405180910390f35b6000602052816000526040600020818154811061007c57600080fd5b90600052602060002001600091509150505481565b6000813590506100a081610167565b92915050565b6000813590506100b58161017e565b92915050565b600080604083850312156100ce57600080fd5b60006100dc85828601610091565b92505060206100ed858286016100a6565b9150509250929050565b61010081610133565b82525050565b600060208201905061011b60008301846100f7565b92915050565b600061012c8261013d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61017081610121565b811461017b57600080fd5b50565b6101878161015d565b811461019257600080fd5b5056fea2646970667358221220b1c3a2a4b8fadf33ecd7c94416c80346589487c13cfbbf39b1be44773767fb3364736f6c63430008040033";

export class MethodsResolver__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MethodsResolver> {
    return super.deploy(overrides || {}) as Promise<MethodsResolver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MethodsResolver {
    return super.attach(address) as MethodsResolver;
  }
  connect(signer: Signer): MethodsResolver__factory {
    return super.connect(signer) as MethodsResolver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MethodsResolverInterface {
    return new utils.Interface(_abi) as MethodsResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MethodsResolver {
    return new Contract(address, _abi, signerOrProvider) as MethodsResolver;
  }
}
