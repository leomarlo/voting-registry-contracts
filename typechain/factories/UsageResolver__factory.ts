/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UsageResolver, UsageResolverInterface } from "../UsageResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610169806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631a42d13914610030575b600080fd5b61004a6004803603810190610045919061008d565b610060565b60405161005791906100c5565b60405180910390f35b60006020528060005260406000206000915090505481565b6000813590506100878161011c565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b6100bf81610112565b82525050565b60006020820190506100da60008301846100b6565b92915050565b60006100eb826100f2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610125816100e0565b811461013057600080fd5b5056fea26469706673582212203654295a77d21a90aeb045d9149cb96e99ba2056df8d8138cf0f6e9971fded8a64736f6c63430008040033";

export class UsageResolver__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UsageResolver> {
    return super.deploy(overrides || {}) as Promise<UsageResolver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UsageResolver {
    return super.attach(address) as UsageResolver;
  }
  connect(signer: Signer): UsageResolver__factory {
    return super.connect(signer) as UsageResolver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsageResolverInterface {
    return new utils.Interface(_abi) as UsageResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsageResolver {
    return new Contract(address, _abi, signerOrProvider) as UsageResolver;
  }
}
