/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ImplementMajorityVote,
  ImplementMajorityVoteInterface,
} from "../ImplementMajorityVote";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "AlreadyVoted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DeadlineHasNotPassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DeadlineHasPassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "StatusError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "VotingInstanceStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "VOTING_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "conclude",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "result",
    outputs: [
      {
        internalType: "bytes",
        name: "resultData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "votingParams",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "callback",
        type: "bytes",
      },
    ],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "votingData",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611033806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633c5940591161005b5780633c594059146101275780635c622a0e14610157578063a438d20814610187578063b88b82ba146101a557610088565b806301ffc9a71461008d5780630d9005ae146100bd5780631080156e146100db5780633487b2561461010b575b600080fd5b6100a760048036038101906100a29190610a87565b6101d5565b6040516100b49190610c0e565b60405180910390f35b6100c56102a7565b6040516100d29190610c66565b60405180910390f35b6100f560048036038101906100f09190610ab0565b6102b1565b6040516101029190610c66565b60405180910390f35b61012560048036038101906101209190610b1c565b6103d2565b005b610141600480360381019061013c9190610b1c565b6104e2565b60405161014e9190610c29565b60405180910390f35b610171600480360381019061016c9190610b1c565b610513565b60405161017e9190610c66565b60405180910390f35b61018f610530565b60405161019c9190610c66565b60405180910390f35b6101bf60048036038101906101ba9190610b45565b610537565b6040516101cc9190610c66565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102a057507f9452d78d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000600654905090565b60006102c06006548484610787565b6102cc60065484610804565b3360016000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600380811115610359577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260006006548152602001908152602001600020819055507f8e967d6054e2a51c6c0b65a326c2c53edf07f50d4a854e102eed777cfb591378600654336040516103a5929190610c81565b60405180910390a16001600660008282546103c09190610dd9565b92505081905550600654905092915050565b60038081111561040b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260008381526020019081526020016000205414610476578060026000838152602001908152602001600020546040517f42ffc09700000000000000000000000000000000000000000000000000000000815260040161046d929190610caa565b60405180910390fd5b61047f81610815565b156104d6578060056000838152602001908152602001600020546040517fa2030cfc0000000000000000000000000000000000000000000000000000000081526004016104cd929190610caa565b60405180910390fd5b6104df81610827565b50565b60606104ed826108cb565b6040516020016104fd9190610c4b565b6040516020818303038152906040529050919050565b600060026000838152602001908152602001600020549050919050565b6206978081565b6000600380811115610572577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600085815260200190815260200160002054146105dd578260026000858152602001908152602001600020546040517f42ffc0970000000000000000000000000000000000000000000000000000000081526004016105d4929190610caa565b60405180910390fd5b6105e683610815565b1561060f576105f483610827565b60026000848152602001908152602001600020549050610781565b6003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156106b15782336040517f04f9da630000000000000000000000000000000000000000000000000000000081526004016106a8929190610c81565b60405180910390fd5b60016003600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000828060200190518101906107309190610a5e565b90506107698482610761577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610764565b60015b6108e8565b60026000858152602001908152602001600020549150505b92915050565b8080519060200120600080858152602001908152602001600020819055506107ae82610916565b6001600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6108118262069780610933565b5050565b60006108208261095a565b9050919050565b6000610832826108cb565b131561087657600480811115610871577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6108b1565b600260048111156108b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b5b600260008381526020019081526020016000208190555050565b600060046000838152602001908152602001600020549050919050565b8060046000848152602001908152602001600020600082825461090b9190610d45565b925050819055505050565b60008180602001905181019061092c9190610a35565b9050919050565b804261093f9190610dd9565b60056000848152602001908152602001600020819055505050565b6000600560008381526020019081526020016000205442119050919050565b600061098c61098784610cf8565b610cd3565b9050828152602081018484840111156109a457600080fd5b6109af848285610ebf565b509392505050565b6000815190506109c681610fa1565b92915050565b6000815190506109db81610fb8565b92915050565b6000813590506109f081610fcf565b92915050565b600082601f830112610a0757600080fd5b8135610a17848260208601610979565b91505092915050565b600081359050610a2f81610fe6565b92915050565b600060208284031215610a4757600080fd5b6000610a55848285016109b7565b91505092915050565b600060208284031215610a7057600080fd5b6000610a7e848285016109cc565b91505092915050565b600060208284031215610a9957600080fd5b6000610aa7848285016109e1565b91505092915050565b60008060408385031215610ac357600080fd5b600083013567ffffffffffffffff811115610add57600080fd5b610ae9858286016109f6565b925050602083013567ffffffffffffffff811115610b0657600080fd5b610b12858286016109f6565b9150509250929050565b600060208284031215610b2e57600080fd5b6000610b3c84828501610a20565b91505092915050565b60008060408385031215610b5857600080fd5b6000610b6685828601610a20565b925050602083013567ffffffffffffffff811115610b8357600080fd5b610b8f858286016109f6565b9150509250929050565b610ba281610e2f565b82525050565b610bb181610e53565b82525050565b6000610bc282610d29565b610bcc8185610d34565b9350610bdc818560208601610ece565b610be581610f90565b840191505092915050565b610bf981610e8b565b82525050565b610c0881610eb5565b82525050565b6000602082019050610c236000830184610ba8565b92915050565b60006020820190508181036000830152610c438184610bb7565b905092915050565b6000602082019050610c606000830184610bf0565b92915050565b6000602082019050610c7b6000830184610bff565b92915050565b6000604082019050610c966000830185610bff565b610ca36020830184610b99565b9392505050565b6000604082019050610cbf6000830185610bff565b610ccc6020830184610bff565b9392505050565b6000610cdd610cee565b9050610ce98282610f01565b919050565b6000604051905090565b600067ffffffffffffffff821115610d1357610d12610f61565b5b610d1c82610f90565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610d5082610e8b565b9150610d5b83610e8b565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615610d9657610d95610f32565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615610dce57610dcd610f32565b5b828201905092915050565b6000610de482610eb5565b9150610def83610eb5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2457610e23610f32565b5b828201905092915050565b6000610e3a82610e95565b9050919050565b6000610e4c82610e95565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610eec578082015181840152602081019050610ed1565b83811115610efb576000848401525b50505050565b610f0a82610f90565b810181811067ffffffffffffffff82111715610f2957610f28610f61565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610faa81610e41565b8114610fb557600080fd5b50565b610fc181610e53565b8114610fcc57600080fd5b50565b610fd881610e5f565b8114610fe357600080fd5b50565b610fef81610eb5565b8114610ffa57600080fd5b5056fea26469706673582212207b7005b293d547871d22dd1b301cfeddf2c3926700496f97322124d8791ddae164736f6c63430008040033";

export class ImplementMajorityVote__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ImplementMajorityVote> {
    return super.deploy(overrides || {}) as Promise<ImplementMajorityVote>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ImplementMajorityVote {
    return super.attach(address) as ImplementMajorityVote;
  }
  connect(signer: Signer): ImplementMajorityVote__factory {
    return super.connect(signer) as ImplementMajorityVote__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementMajorityVoteInterface {
    return new utils.Interface(_abi) as ImplementMajorityVoteInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImplementMajorityVote {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ImplementMajorityVote;
  }
}
